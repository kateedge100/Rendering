OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
shader leafRidge
param	float	repeatCount	5		%read{2147483647,-1} %write{2147483647,-1}
oparam	float	resultF	0		%read{2147483647,-1} %write{7,7}
global	point	P	%read{1,7} %write{6,6}
local	point	PP	%read{2147483647,-1} %write{1,1}
const	string	$const1	"object"		%read{1,1} %write{2147483647,-1}
const	string	$const2	"transform"		%read{0,0} %write{2147483647,-1}
const	string	$const3	"common"		%read{1,1} %write{2147483647,-1}
const	int	$const4	0		%read{2,3} %write{2147483647,-1}
temp	float	$tmp1	%read{4,4} %write{2,2}
temp	float	$tmp2	%read{4,4} %write{3,3}
temp	float	$tmp3	%read{5,5} %write{4,4}
temp	float	$tmp4	%read{6,6} %write{5,5}
const	int	$const5	1		%read{6,7} %write{2147483647,-1}
code ___main___
# displacement.osl:8
#     point PP=transform("object",P);
	functioncall	$const2 2 	%filename{"displacement.osl"} %line{8} %argrw{"r"}
# /opt/pixar/RenderManProServer-20.10/lib/osl/include/stdosl.h:243
# normal transform (matrix Mto, normal p) BUILTIN;
	transform	PP $const3 $const1 P 	%filename{"/opt/pixar/RenderManProServer-20.10/lib/osl/include/stdosl.h"} %line{243} %argrw{"wrrr"}
# displacement.osl:10
#      P[1]=-((P[0])*(P[0]));
	compref		$tmp1 P $const4 	%filename{"displacement.osl"} %line{10} %argrw{"wrr"}
	compref		$tmp2 P $const4 	%argrw{"wrr"}
	mul		$tmp3 $tmp1 $tmp2 	%argrw{"wrr"}
	neg		$tmp4 $tmp3 	%argrw{"wr"}
	compassign	P $const5 $tmp4 	%argrw{"wrr"}
# displacement.osl:11
#      resultF=P[1];
	compref		resultF P $const5 	%line{11} %argrw{"wrr"}
	end
